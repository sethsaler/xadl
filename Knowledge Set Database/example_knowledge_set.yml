input:
  documents:
    type: document
  workspace:
    type: workspace

actions:
  # ---------------------------------------------------------------------------
  # 1. Tag Collections: Locate and group tags based on your specified categories.
  # ---------------------------------------------------------------------------
  get-<TAG_CATEGORY_1>-tags:
    tool: find-tags
    category: <TAG_CATEGORY_1>

  get-<TAG_CATEGORY_2>-tags:
    tool: find-tags
    category: <TAG_CATEGORY_2>

  # ---------------------------------------------------------------------------
  # 2. Base Configuration: Create a base prompt that describes your task.
  # ---------------------------------------------------------------------------
  basePrompt:
    tool: echo
    message: |
      # <TASK_DESCRIPTION> Automation Expert
      You are an expert tasked with accomplishing: <TASK_DESCRIPTION>.
      Your responsibilities include:
      - Processing input documents.
      - Extracting and analyzing tags for "<TAG_CATEGORY_1>" and "<TAG_CATEGORY_2>".
      - Producing structured JSON output.
      
  # ---------------------------------------------------------------------------
  # 3. Analysis Prompt: Build on the base prompt for detailed instructions.
  # ---------------------------------------------------------------------------
  analysisPrompt:
    tool: echo
    message: |
      {{basePrompt}}
      
      Review the following content and perform a detailed analysis.

  # ---------------------------------------------------------------------------
  # 4. Section Title: Provide a title for your analysis output.
  # ---------------------------------------------------------------------------
  analysisTitle:
    tool: echo
    message: <TASK_DESCRIPTION>

  # ---------------------------------------------------------------------------
# ...

input:
  documents:
    type: document
  workspace:
    type: workspace

actions:
  # ---------------------------------------------------------------------------
  # 1. Tag Collections: Locate and group tags based on your specified categories.
  # ---------------------------------------------------------------------------
  get-<TAG_CATEGORY_1>-tags:
    tool: find-tags
    category: <TAG_CATEGORY_1>

  get-<TAG_CATEGORY_2>-tags:
    tool: find-tags
    category: <TAG_CATEGORY_2>

  # ---------------------------------------------------------------------------
  # 2. Base Configuration: Create a base prompt that describes your task.
  # ---------------------------------------------------------------------------
  basePrompt:
    tool: echo
    message: |
      # <TASK_DESCRIPTION> Automation Expert
      You are an expert tasked with accomplishing: <TASK_DESCRIPTION>.
      Your responsibilities include:
      - Processing input documents.
      - Extracting and analyzing tags for "<TAG_CATEGORY_1>" and "<TAG_CATEGORY_2>".
      - Producing structured JSON output.
      
  # ---------------------------------------------------------------------------
  # 3. Analysis Prompt: Build on the base prompt for detailed instructions.
  # ---------------------------------------------------------------------------
  analysisPrompt:
    tool: echo
    message: |
      {{basePrompt}}
      
      Review the following content and perform a detailed analysis.

  # ---------------------------------------------------------------------------
  # 4. Section Title: Provide a title for your analysis output.
  # ---------------------------------------------------------------------------
  analysisTitle:
    tool: echo
    message: <TASK_DESCRIPTION> Analysis

  # ---------------------------------------------------------------------------
  # 5. Initialize Knowledge Set: Prepare a knowledge set with tag dimensions.
  # ---------------------------------------------------------------------------
  init-kset:
    input:
      documents: task/documents
      tagCategory1: get-<TAG_CATEGORY_1>-tags
      tagCategory2: get-<TAG_CATEGORY_2>-tags
    tool: knowledge-set
    knowledgeSetName: "<TASK_DESCRIPTION> Knowledge Set"
    operations:
      - op: add-dimension
        key: category1
        name: "<TAG_CATEGORY_1>"
        nodes: tagCategory1
        priority: 1
      - op: add-dimension
        key: category2
        name: "<TAG_CATEGORY_2>"
        nodes: tagCategory2
        priority: 2
      - op: set-nodes
        nodes: documents

  # ---------------------------------------------------------------------------
  # 6. Analysis Actions: Execute a function to process content based on tags.
  # ---------------------------------------------------------------------------
  analyze-task:
    repeat:
      function: analyze-for-task
      for: [tagCategory1, tagCategory2]
    input:
      tagCategory1: get-<TAG_CATEGORY_1>-tags
      tagCategory2: get-<TAG_CATEGORY_2>-tags
      documents: task/documents
      knowledge: init-kset
      basePrompt: basePrompt
      prompt: analysisPrompt
      title: analysisTitle

  # ---------------------------------------------------------------------------
  # 7. Add Results to Workspace: Integrate your analysis into the workspace.
  # ---------------------------------------------------------------------------
  add-to-workspace:
    input:
      workspace: task/workspace
      taskAnalysis: analyze-task
      knowledgeForDocuments: init-kset
    tool: workspace
    operations:
      - op: add-items
        items: knowledgeForDocuments

# =============================================================================
# Functions: Define reusable operations for processing the task.
# =============================================================================
functions:
  analyze-for-task:
    input:
      tagCategory1:
        type: tag
      tagCategory2:
        type: tag
      documents:
        type: document
      knowledge:
        type: knowledge-set
      basePrompt:
        type: text
      prompt:
        type: text
      title:
        type: text

    actions:
      # -------------------------------------------------------------
      # Extract relevant text snippets from documents using tags.
      # -------------------------------------------------------------
      get-snippets:
        input:
          tagCategory1: function/tagCategory1
          tagCategory2: function/tagCategory2
          documents: function/documents
        tool: document-text
        textFilter:
          tags:
            - tagCategory1
            - tagCategory2
        skipIfEmpty: documents

      # -------------------------------------------------------------
      # Generate an instruction prompt outlining the expected JSON output.
      # -------------------------------------------------------------
      get-instruction-prompt-for-tag:
        input:
          tagCategory1: function/tagCategory1
          tagCategory2: function/tagCategory2
        tool: echo
        message: |
          Format your response as a JSON object with the following structure:
          {
            "results": [
              {
                "detail": "[specific detail]",
                "category": "[<TAG_CATEGORY_1> or <TAG_CATEGORY_2>]",
                "notes": "[additional notes]"
              }
            ],
            "observations": [
              {
                "type": "[observation type]",
                "description": "[detailed observation]",
                "importance": "[high/medium/low]"
              }
            ]
          }

      # -------------------------------------------------------------
      # Run the prompt using the extracted snippets.
      # -------------------------------------------------------------
      run-prompt:
        input:
          snippets: get-snippets
          basePrompt: function/basePrompt
          instructionPrompt: get-instruction-prompt-for-tag
          prompt: function/prompt
        tool: llm
        skipIfEmpty: snippets
        prompt: |
          {{instructionPrompt.text}}
          {{prompt.text}}
          {% for s in snippets %}
          {{s.text}}
          {% endfor %}

      # -------------------------------------------------------------
      # Create an insight based on the LLMâ€™s output.
      # -------------------------------------------------------------
      create-insight:
        input:
          summary: run-prompt
          snippets: get-snippets
          tagCategory1: function/tagCategory1
          tagCategory2: function/tagCategory2
          title: function/title
        skipIfEmpty: summary
        tool: insight
        text: |
          {{summary.text}}
        name: "{{title.text}} for {{tagCategory1.name}} and {{tagCategory2.name}}"
        tags: [tagCategory1, tagCategory2]
        attributes:
          category: task-analysis-insight
        relations:
          derived-from: [snippets]

      # -------------------------------------------------------------
      # Add the insight back into the knowledge set.
      # -------------------------------------------------------------
      add-insight:
        input:
          knowledge: function/knowledge
          insight: create-insight
          snippets: get-snippets
        tool: knowledge-set
        operations:
          - op: set-nodes
            nodes: insight
          - op: set-nodes
            nodes: snippets